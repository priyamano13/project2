package testcases;

import org.testng.annotations.Test;
import base.Base;
import pageobjects.LoginPage;

public class LoginTest extends Base {
    
	@Test(priority=1)
	public void LoginwithValidCredentails() {

		LoginPage lp = new LoginPage(driver);
		lp.clickonLoginOption();
		lp.clickonEmailRadiobutton();
		lp.enterEmailId(prop.getProperty("loginid"));
		lp.enterPassword(prop.getProperty("password"));
		lp.clickonLoginButton();
		
	}
    
	@Test(priority=2)
	public void LoginwithInvalidCredentials() {

		LoginPage lp = new LoginPage(driver);
		lp.clickonLoginOption();
		lp.clickonEmailRadiobutton();
		lp.enterEmailId(prop.getProperty("loginid"));
		lp.enterInvalidPassword(prop.getProperty("InvalidPassword"));
		lp.clickonLoginButton();
		lp.Accountname();

	}

	
	@Test
	public void FlightSearch() {
		
		SearchforOneWayPage sp = new SearchforOneWayPage(driver);
		sp.EnterFromOrigin(prop.getProperty("From"));
		sp.EnterToDestination(prop.getProperty("To"));
		sp.DepartureDate();
		sp.Searchflight();	

}
	@Test
	public void FlightSearch() {
		
		SearchforRoundtripPage sp = new SearchforRoundtripPage(driver);
		sp.ClickonRoundTrip();
		sp.EnterFromOrigin(prop.getProperty("Origin"));
		sp.EnterToDestination(prop.getProperty("Destination"));
		sp.DepartureDate();
		sp.ClickonDate();
		sp.ReturnDate();
		sp.Searchflight();
	}
	@Test
	public void BookFlight() {
		
		SearchforOneWayPage sp = new SearchforOneWayPage(driver);
		sp.EnterFromOrigin("Hy");
		sp.EnterToDestination("Vis");
		sp.DepartureDate();
		sp.Searchflight();
		SelectaFlightPage FP = new SelectaFlightPage(driver);
		FP.clickOnContinue();
		FP.EnterFandMname(prop.getProperty("FirstName"));
		FP.EnterLname(prop.getProperty("LastName"));
		FP.EnterContactnumber(prop.getProperty("Contact"));
		FP.EnterEmaiId(prop.getProperty("Email"));
		FP.Entercityfield(prop.getProperty("City"));
		FP.EnterCheckMark();
		FP.ClickOnContinueButton();
		FP.ClickOnContinueButton2();
	}
	@Test
		public void Signup() {

			SignupPage signup = new SignupPage(driver);
			signup.Signupbutton();
			
			Switchwindow();
			signup.SelectTitle();
			signup.EnterFirstName(prop.getProperty("FirstName"));
			signup.EnterLastName(prop.getProperty("LastName"));
			signup.EnterCountry(prop.getProperty("Country"));
			signup.EnterDateob(prop.getProperty("Dateofbir"));
			signup.EnterMobile(prop.getProperty("Contact"));
			signup.EnterEmaiId(prop.getProperty("Email"));
			signup.EnterPassword(prop.getProperty("Password"));
			signup.EnterConpassword(prop.getProperty("Conpassword"));
		
		}
	@Test(priority=1)
	public void ValidationOnElement1() {
		
		ValidationPage vp = new ValidationPage(driver);
		Assert.assertTrue(vp.ValidationforCheckIn());	
	}
	
	@Test(priority=2)
	public void ValidationOnElement2() {
		
		ValidationPage vp = new ValidationPage(driver);
		Assert.assertTrue(vp.ValidationforFlightStatus());	
	}
	
	@Test(priority=3)
	public void ValidationOnElement3() {
		
	    ValidationPage vp = new ValidationPage(driver);
	    Assert.assertTrue(vp.ValidationforManageBooking());
	}
}
